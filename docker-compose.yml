name: smart-iot-monitoring-system

volumes:
  mysql-data:
  mongo-data:
  redis-data:
  opensearch-data:
  mosquitto-data:
  mediamtx-recordings:

services:
  mysql:
    image: mysql:8.0
    container_name: iot-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password", "--mysqlx=0"]
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  mongodb:
    image: mongo:7.0
    container_name: iot-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  redis:
    image: redis:alpine
    container_name: iot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: iot-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "29092:29092"

  opensearch:
    image: opensearchproject/opensearch:2.8.0
    container_name: iot-opensearch
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9600:9600"
    volumes:
      - opensearch-data:/usr/share/opensearch/data

  os-dashboards:
    image: opensearchproject/opensearch-dashboards:2.8.0 
    container_name: iot-os-dashboards
    restart: unless-stopped
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
      OPENSEARCH_SECURITY_ENABLED: "false"
    ports:
      - "5601:5601"
    depends_on:
      - opensearch

  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: iot-mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"   # MQTT TCP
      - "9001:9001"   # WebSocket
    volumes:
      - ./infra/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto-data:/mosquitto/data

  celery:
    build: .
    container_name: iot-celery
    restart: unless-stopped
    command: celery -A smart_iot worker -l info
    environment:
      MYSQL_HOST: iot-mysql
      MYSQL_PORT: "3306"
      MYSQL_DATABASE: smart_iot
      MYSQL_USER: user
      MYSQL_PASSWORD: Mk@123456
    depends_on:
      - redis
      - mysql
    volumes:
      - .:/app

  app:
    build: .
    container_name: iot-app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      MYSQL_HOST: iot-mysql
      MYSQL_PORT: "3306"
      MYSQL_DATABASE: smart_iot
      MYSQL_USER: user
      MYSQL_PASSWORD: Mk@123456
    depends_on:
      - mysql
      - mongodb
      - redis
      - kafka
      - mosquitto

  mediamtx:
    image: bluenviron/mediamtx:latest
    container_name: iot-mediamtx
    restart: unless-stopped
    ports:
      - "8554:8554"   # RTSP
      - "8889:8889"   # HLS
      - "8890:8890"   # WebRTC
      - "1935:1935"   # RTMP
    volumes:
      - ./infra/mediamtx/mediamtx.yml:/mediamtx.yml
      - mediamtx-recordings:/recordings
    environment:
      - MTX_PROTOCOLS=tcp
      - MTX_HLSALWAYSREMUX=yes

