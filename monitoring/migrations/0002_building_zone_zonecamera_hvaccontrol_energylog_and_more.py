# Generated by Django 4.2.5 on 2025-10-20 10:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('monitoring', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('floors', models.IntegerField()),
                ('total_area', models.FloatField(help_text='Diện tích (m2)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('floor', models.IntegerField()),
                ('zone_type', models.CharField(choices=[('LOBBY', 'Lobby'), ('OFFICE', 'Office'), ('MEETING', 'Meeting Room'), ('SERVER', 'Server Room'), ('PARKING', 'Parking Lot'), ('CORRIDOR', 'Corridor'), ('EMERGENCY', 'Emergency Exit'), ('OTHER', 'Other')], max_length=20)),
                ('area', models.FloatField(help_text='Diện tích (m2)')),
                ('target_temperature', models.FloatField(default=24.0)),
                ('temp_min', models.FloatField(default=22.0)),
                ('temp_max', models.FloatField(default=26.0)),
                ('target_humidity', models.FloatField(default=60.0)),
                ('humidity_min', models.FloatField(default=40.0)),
                ('humidity_max', models.FloatField(default=70.0)),
                ('operating_start', models.TimeField(default='08:00:00')),
                ('operating_end', models.TimeField(default='18:00:00')),
                ('is_active', models.BooleanField(default=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zones', to='monitoring.building')),
            ],
            options={
                'ordering': ['floor', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ZoneCamera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('camera_type', models.CharField(choices=[('SECURITY', 'Security Camera'), ('MONITORING', 'Environment Monitoring'), ('ENTRANCE', 'Entrance Camera'), ('PARKING', 'Parking Camera')], max_length=20)),
                ('rtsp_url', models.CharField(max_length=500)),
                ('mediamtx_path', models.CharField(max_length=100, unique=True)),
                ('recording_enabled', models.BooleanField(default=True)),
                ('retention_days', models.IntegerField(default=30)),
                ('position_description', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cameras', to='monitoring.zone')),
            ],
        ),
        migrations.CreateModel(
            name='HVACControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(choices=[('AUTO', 'Automatic'), ('MANUAL', 'Manual'), ('SCHEDULE', 'Scheduled'), ('OFF', 'Off')], default='AUTO', max_length=20)),
                ('current_temperature', models.FloatField(blank=True, null=True)),
                ('set_temperature', models.FloatField(default=24.0)),
                ('fan_speed', models.IntegerField(default=50, help_text='0-100%')),
                ('is_cooling', models.BooleanField(default=False)),
                ('is_heating', models.BooleanField(default=False)),
                ('power_consumption', models.FloatField(default=0.0, help_text='kW')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('zone', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hvac', to='monitoring.zone')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('hvac_consumption', models.FloatField(default=0.0, help_text='kWh')),
                ('lighting_consumption', models.FloatField(default=0.0, help_text='kWh')),
                ('total_consumption', models.FloatField(default=0.0, help_text='kWh')),
                ('cost', models.FloatField(default=0.0, help_text='VND')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.zone')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='BuildingAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('TEMPERATURE', 'Temperature Alert'), ('HUMIDITY', 'Humidity Alert'), ('SECURITY', 'Security Alert'), ('ENERGY', 'Energy Alert'), ('HVAC', 'HVAC Malfunction'), ('DOOR', 'Door Alert'), ('MOTION', 'Motion Detected')], max_length=20)),
                ('severity', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('CRITICAL', 'Critical'), ('EMERGENCY', 'Emergency')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('sensor_value', models.FloatField(blank=True, null=True)),
                ('sensor_type', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('video_recording_path', models.CharField(blank=True, max_length=500)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('camera', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='monitoring.zonecamera')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.zone')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ZoneSensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_type', models.CharField(choices=[('TEMPERATURE', 'Temperature'), ('HUMIDITY', 'Humidity'), ('CO2', 'CO2 Level'), ('LIGHT', 'Light Level'), ('MOTION', 'Motion Detector'), ('DOOR', 'Door Sensor')], max_length=20)),
                ('location_description', models.CharField(max_length=200)),
                ('latest_reading', models.FloatField(blank=True, null=True)),
                ('latest_reading_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.device')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensors', to='monitoring.zone')),
            ],
            options={
                'unique_together': {('zone', 'device')},
            },
        ),
    ]
